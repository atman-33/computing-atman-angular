{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../libs/src/shared/utils/html-utils.ts","webpack:///../libs/src/shared/utils/index.ts","webpack:///../libs/src/shared/utils/markdown-utils.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blogs/blogs.controller.ts","webpack:///./src/app/blogs/blogs.module.ts","webpack:///./src/app/blogs/blogs.service.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///external commonjs \"express\"","webpack:///external commonjs \"tslib\"","webpack:///external node-commonjs \"fs\"","webpack:///external node-commonjs \"path\"","webpack:///external node-commonjs \"util\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["/**\n  * htmlのタグにクラスを追加\n  * @param html \n  * @param className \n  * @param tagName \n  * @returns \n  */\nexport function addClassToHtml(html: string, className: string, tagName: string): string {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const elements = doc.querySelectorAll(tagName);\n    elements.forEach((el) => {\n        el.classList.add(className);\n    });\n    return doc.documentElement.innerHTML;\n}\n\n/**\n * 要素の終了タグの後ろにテキストを追加\n * @param html\n * @param tagName \n * @param text \n * @returns \n */\nexport function addTextAfterClosingTag(html: string, tagName: string, text: string): string {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const elements = doc.querySelectorAll(tagName);\n    elements.forEach((el) => {\n        const textNode = document.createTextNode(text);\n        if (el.parentNode) {\n            el.parentNode.insertBefore(textNode, el.nextSibling);\n        }\n    });\n    return doc.documentElement.innerHTML.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"');\n}","export * from './html-utils';\nexport * from './markdown-utils';","import * as MarkdownIt from 'markdown-it';\n\n/**\n * mdファイル内の画像に文字列を追加\n * @param md \n * @param prefix \n */\nexport function addMdPrefixToImageSource(md: MarkdownIt, prefix: string) {\n    md.renderer.rules.image = (tokens, idx, options, env, self) => {\n        const imgToken = tokens[idx];\n        const srcIndex = imgToken.attrIndex('src');\n        if (imgToken.attrs !== null) {\n            const srcValue = imgToken.attrs[srcIndex][1];\n            const newSrcValue = prefix + srcValue;\n            imgToken.attrs[srcIndex][1] = newSrcValue;\n        }\n        return self.renderToken(tokens, idx, options);\n    };\n}\n\n/**\n * mdファイルのコンテンツデータを取得\n * @param str \n * @returns \n */\nexport function getMdContent(str: string): string {\n    const startIndex = str.indexOf('---');\n    const endIndex = str.indexOf('---', startIndex + 1);\n    const content = str.slice(endIndex + 3).trim();\n\n    return content;\n}\n\n/**\n * mdファイルのメタデータを取得\n * @param str \n * @param key \n * @returns \n */\nexport function getMetadataValue(str: string, key: string): string {\n    const startIndex = str.indexOf('---');\n    const endIndex = str.indexOf('---', startIndex + 1) + 1;\n    const metadata = str.slice(startIndex + 3, endIndex).trim();\n\n    const keyStartIndex = metadata.indexOf(key);\n    if (keyStartIndex === -1) {\n        return '';\n    }\n\n    const keyEndIndex = metadata.indexOf('\\n', keyStartIndex);\n    const value = metadata.slice(keyStartIndex + key.length, keyEndIndex).trim();\n\n    return value;\n}\n\n/**\n * mdファイルのメタデータの配列を取得\n * @param str \n * @param key \n * @returns \n */\nexport function getMetadataArray(str: string, key: string): string[] {\n\n    const find = getMetadataValue(str, key);\n    if (find) {\n        return [find];\n    }\n\n    const startIndex = str.indexOf('---');\n    const endIndex = str.indexOf('---', startIndex + 1);\n    const metadata = str.slice(startIndex + 3, endIndex).trim();\n\n    const keyStartIndex = metadata.indexOf(key);\n    if (keyStartIndex < 0) {\n        return [];\n    }\n\n    const keyEndIndex = metadata.indexOf(':', keyStartIndex + key.length);\n    const value = metadata.slice(keyStartIndex + key.length, keyEndIndex);\n\n    const lines = value.split('\\n').filter(line => line.startsWith('-'));\n    const values = lines.map(v => v.slice(2, v.indexOf('\\n')).trim());\n\n    return values;\n}\n","import { Module } from '@nestjs/common';\nimport { BlogsModule } from './blogs/blogs.module';\n// import { ItemsModule } from './items/items.module';\n// import { AuthModule } from './auth/auth.module';\n// import { TypeOrmModule } from '@nestjs/typeorm';\n// import { dataSourceOptions } from '../../data-source';\n\n@Module({\n  imports: [\n    // ItemsModule,\n    // AuthModule,\n    // TypeOrmModule.forRoot(dataSourceOptions),\n    BlogsModule\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n","import { Controller, Get, Param, Res } from '@nestjs/common';\nimport { BlogsService } from './blogs.service';\nimport { Blog } from './blog.model';\nimport { Response } from 'express';\n\n@Controller('blogs')\nexport class BlogsController {\n\n    constructor(private readonly blogsService: BlogsService) {\n    }\n\n    @Get('ids')\n    async findAllIds(): Promise<string[]> {\n        return await this.blogsService.findAllIds();\n    }\n\n    @Get()\n    async findAll(): Promise<Blog[]> {\n        return await this.blogsService.findAll();\n    }\n\n    @Get(':id')\n    async findById(@Param('id') id: string): Promise<Blog> {\n        return await this.blogsService.findById(id);\n    }\n\n    @Get('/img/:id/:fileName')\n    async getBlogImageFile(\n        @Param('id') id: string,\n        @Param('fileName') fileName: string,\n        @Res() res: Response) {\n        return await this.blogsService.getBlogImageFile(id, fileName, res);\n    }\n}\n","import { Module } from '@nestjs/common';\nimport { BlogsController } from './blogs.controller';\nimport { BlogsService } from './blogs.service';\n\n@Module({\n  controllers: [BlogsController],\n  providers: [BlogsService],\n})\nexport class BlogsModule {}\n","import { Injectable } from '@nestjs/common';\nimport { Blog } from './blog.model';\nimport { readFile, readdir } from 'fs';\nimport { promisify } from 'util';\n// eslint-disable-next-line @nx/enforce-module-boundaries\nimport * as utils from 'libs/src/shared/utils';\nimport { Response } from 'express';\nimport { join } from 'path';\n\n@Injectable()\nexport class BlogsService {\n\n  async findAllIds(): Promise<string[]> {\n\n    const folderPath = join(process.cwd(), 'dist/server/assets/posts');\n\n    try {\n      const dirents = await promisify(readdir)(\n        folderPath, {\n        withFileTypes: true,\n      });\n      const folders = dirents\n        .filter((dirent) => dirent.isDirectory())\n        .map((dirent) => dirent.name);\n      return folders;\n    } catch (error) {\n      console.error(`Failed to read directories: ${error}`);\n      throw new Error('Failed to read directories');\n    }\n  }\n\n  async findAll(): Promise<Blog[]> {\n    const ids = await this.findAllIds();\n\n    const blogs: Blog[] = [];\n    for (const id of ids) {\n      blogs.push(await this.findById(id));\n    }\n\n    return blogs;\n  }\n\n  async findById(id: string): Promise<Blog> {\n    // console.log(id);\n\n    const filePath = join(process.cwd(), 'dist/server/assets/posts', id, 'index.md');\n    try {\n      const content = promisify(readFile)(filePath, { encoding: 'utf-8' });\n      return this.parseBlogContent(id, await content);\n    } catch (error) {\n      console.error(`Failed to read file: ${filePath}`);\n      console.error(error);\n    }\n  }\n\n  getBlogImageFile(id: string, fileName: string, res: Response) {\n\n    const imageFilePath = join(process.cwd(), 'dist/server/assets/posts', id, fileName);\n    return res.sendFile(imageFilePath);\n  }\n\n  private parseBlogContent(id: string, content: string): Blog {\n    // console.log(`id: ${id}`);\n\n    const blog: Blog = {\n      id: id,\n      title: utils.getMetadataValue(content, 'title:'),\n      date: utils.getMetadataValue(content, 'date:'),\n      thumbnail: utils.getMetadataValue(content, 'thumbnail:'),\n      tags: utils.getMetadataArray(content, 'tags:'),\n      categories: utils.getMetadataArray(content, 'categories:'),\n      article: utils.getMdContent(content),\n    };\n\n    return blog;\n  }\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"express\");","module.exports = require(\"tslib\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.useGlobalPipes(new ValidationPipe());\n\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}